# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16MWucnd6A1_-Q8SmJfgD6pir9wZpjxmF

Q1-4
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.datasets import make_classification
from sklearn.linear_model import LogisticRegression, SGDClassifier
from mlxtend.plotting import plot_decision_regions

X, y = make_classification(n_samples=1000, n_features=2, n_redundant=0, n_clusters_per_class=2, class_sep=1, n_classes=2, random_state=27)
print(X.shape, y.shape)

plt.scatter(X[:, 0], X[:, 1], c=y)

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
model = LogisticRegression(solver='sag', max_iter=300, random_state=14,)
model.fit(x_train, y_train)
print(x_train.shape), print(y_train.shape), print(x_test.shape), print(y_test.shape)
y_pred=model.predict(x_test)
y_pred, y_test

model.score(x_train, y_train)

model.score(x_test, y_test)

plot_decision_regions(x_test, y_pred, clf=model, legend=2, X_highlight=x_test[y_test != y_pred])
misclassified_indices = np.where(y_test != y_pred)[0]
plt.scatter(x_test[misclassified_indices, 0], x_test[misclassified_indices, 1], marker='x', color='red', label='Misclassified')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.title('Decision Boundary with Misclassified Samples')
plt.legend()
plt.show()

model1 = SGDClassifier(loss='log_loss',max_iter=300, random_state=27)
model1.fit(x_train, y_train)
y_pred1=model1.predict(x_test)
y_pred1, y_test

model1.score(x_train, y_train)

model1.score(x_test, y_test)

plot_decision_regions(x_test, y_pred1, clf=model1, legend=2, X_highlight=x_test[y_test != y_pred1])
misclassified_indices = np.where(y_test != y_pred1)[0]
plt.scatter(x_test[misclassified_indices, 0], x_test[misclassified_indices, 1], marker='x', color='red', label='Misclassified')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.title('Decision Boundary with Misclassified Samples')
plt.legend()
plt.show()