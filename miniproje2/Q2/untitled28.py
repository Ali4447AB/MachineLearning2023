# -*- coding: utf-8 -*-
"""Untitled28.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VIEx98G0yXy5noI06Z3iE26Oc81HFT5E

Question 2

import library
"""

#import library
import numpy as np
import itertools

#define muculloch pitts
class McCulloch_Pitts_neuron():

  def __init__(self , weights , threshold):
    self.weights = weights    #define weights
    self.threshold = threshold    #define threshold

  def model(self , x):
    #define model with threshold
    if self.weights @ x >= self.threshold:
        return 1
    else:
        return 0

def Zarb(state):
  # تعریف گیت ها
  Not = McCulloch_Pitts_neuron([-3] , -1.5)
  Nor = McCulloch_Pitts_neuron([-3, -3] , -1.5)
  Nand = McCulloch_Pitts_neuron([-1, -1] , -1.5)
  Nand_1 = McCulloch_Pitts_neuron([-1, -1 , 0, 0] , -1.5)
  Nand_2 = McCulloch_Pitts_neuron([0, 0 , -1, -1] , -1.5)
  Nand_3 = McCulloch_Pitts_neuron([-1, 0 , -1, 0] , -1.5)
  Nand_4 = McCulloch_Pitts_neuron([0, -1 , 0, -1] , -1.5)
  Nand_5 = McCulloch_Pitts_neuron([-1, 0 , 0, -1] , -1.5)
  Nand_6 = McCulloch_Pitts_neuron([0, -1 , -1, 0] , -1.5)

  # y1
  # تعریف خروجی های میانی
  z1 = Nand_1.model(np.array([state[0], state[1], state[2], state[3]]))
  z2 = Not.model(np.array([z1]))
  z3 = Nand_2.model(np.array([state[0], state[1], state[2], state[3]]))
  z4 = Not.model(np.array([z3]))
  z5 = Nand.model(np.array([z2, z4]))
  z6 = Not.model(np.array([z5]))

  y1 = z6


  # y2
  # تعریف خروجی های میانی
  z7 = Nand_3.model(np.array([state[0], state[1], state[2], state[3]]))
  z8 = Not.model(np.array([z7]))
  z9 = Nand_4.model(np.array([state[0], state[1], state[2], state[3]]))
  z10 = Nand.model(np.array([z8, z9]))
  z11 = Not.model(np.array([z10]))

  y2 = z11


  # y3
  # تعریف خروجی های میانی
  z12 = Nand_5.model(np.array([state[0], state[1], state[2], state[3]]))
  z13 = Not.model(np.array([z12]))
  z14 = Nand_6.model(np.array([state[0], state[1], state[2], state[3]]))
  z15 = Not.model(np.array([z14]))
  z16 = Nand.model(np.array([z13, z14]))
  z17 = Nand.model(np.array([z12, z15]))
  z18 = Not.model(np.array([z16]))
  z19 = Not.model(np.array([z17]))
  z20 = Nor.model(np.array([z18, z19]))
  z21 = Not.model(np.array([z20]))

  y3 = z21


  # y4
  # تعریف خروجی های میانی
  z22 = Nand_4.model(np.array([state[0], state[1], state[2], state[3]]))
  z23 = Not.model(np.array([z22]))

  y4 = z23

  return list([y1,y2,y3,y4])

state_b = [1, 0]
state = list(itertools.product(state_b, state_b, state_b, state_b))
print('state: ', state)

X = list(itertools.product(state))
for i in X:
    kh = Zarb(i[0])
    print("Zarbe adad aval do biti ", str(i[0][0])+str(" ")+str(i[0][1]), " dar adad dovom do biti ", str(i[0][2])+str(" ")+str(i[0][3]),
          " barabar ast ba adad chahar biti ",str(kh[0]) + str(" ")+str(kh[1])+ str(" ")+str(kh[2])+ str(" ")+str(kh[3]), " ast ")